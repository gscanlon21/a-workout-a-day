@model ManageExerciseViewModel
@using System.Numerics
@using Core.Models.Exercise
@using Core.Consts

<h5 class="mb-1">Exercise</h5>
<div class="alert alert-secondary shadow mb-0">
    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.IgnoreExercise)" method="post"
          asp-route-email="@Model.Parameters.Email" asp-route-token="@Model.Parameters.Token" asp-route-section="@Model.Parameters.Section" asp-route-variationId="@Model.Parameters.VariationId" asp-route-exerciseId="@Model.Parameters.ExerciseId">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group mb-3">
            <label for="exercise-name" class="control-label">@Html.DisplayNameFor(_ => Model.Exercise)</label>
            <div class="input-group">
                <textarea id="exercise-name" class="form-control" disabled="disabled" aria-describedby="exercise-help" rows="1">@Model.Exercise.Name</textarea>
                <input type="submit" value="@(Model.UserExercise.Ignore ? "Ignored" : "Ignore")" class="btn btn-outline-secondary" @(Model.User.IsDemoUser ? "disabled='disabled'" : "") />
            </div>
            <span asp-validation-for="Exercise" class="text-danger"></span>
            <div id="exercise-help" class="form-text">
                @Html.DisplayDescriptionFor(_ => Model.Exercise)
            </div>
        </div>
    </form>

    @if (Model.User.IsDemoUser)
    {
        <div class="alert alert-info callout">
            Progress or regress exercises to switch between easier and harder variations.
        </div>
    }
    <div class="form-group mb-3">
        <label for="exercise-variation-date" class="control-label">Progression</label>
        <div class="input-group">
            @if (Model.UserExercise.Progression > UserConsts.MinUserProgression)
            {
                <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.RegressExercise)" method="post"
                      asp-route-email="@Model.Parameters.Email" asp-route-token="@Model.Parameters.Token" asp-route-section="@Model.Parameters.Section" asp-route-variationId="@Model.Parameters.VariationId" asp-route-exerciseId="@Model.Parameters.ExerciseId">

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="submit" value="Regress" class="btn btn-outline-secondary allow-demo"
                           style="border-top-right-radius:0;border-bottom-right-radius:0;" />
                </form>
            }
            <input type="text" id="exercise-variation-date" class="form-control" disabled="disabled" aria-describedby="exercise-variation-date-help" rows="1" value="@Model.UserExercise.Progression%" />
            @if (Model.UserExercise.Progression < UserConsts.MaxUserProgression)
            {
                <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ProgressExercise)" method="post"
                      asp-route-email="@Model.Parameters.Email" asp-route-token="@Model.Parameters.Token" asp-route-section="@Model.Parameters.Section" asp-route-variationId="@Model.Parameters.VariationId" asp-route-exerciseId="@Model.Parameters.ExerciseId">

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="submit" value="Progress" class="btn btn-outline-secondary allow-demo"
                           style="border-top-left-radius:0;border-bottom-left-radius:0;" />
                </form>
            }
        </div>

        <span asp-validation-for="UserExercise" class="text-danger"></span>
        <div id="exercise-variation-date-help" class="form-text">
            Progress or regress an exercise's progression level to switch to an easier or harder variation.
        </div>
    </div>

    @* Don't allow users to manage the exercise (setting user to null) since those variations may not be in the same section as this variation. Also setting the section to none for the same reason. *@
    <component type="typeof(Lib.Pages.Shared.Exercise.ExerciseSection)" render-mode="Static" param-User="null" param-Exercises='Model.ExerciseVariations' param-Theme='Section.None.AsTheme()' param-Verbosity="Model.ExerciseVerbosity" />
</div>
